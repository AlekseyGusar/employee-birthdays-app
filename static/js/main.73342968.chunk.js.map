{"version":3,"sources":["services/localStorageService.js","constants/constans.js","utils/utils.js","reducers/rootReducer.js","stores/store.js","actions/actions.js","components/Employee.js","components/Employees.js","components/Birthdays.js","App.js","reportWebVitals.js","index.js"],"names":["saveItem","key","item","localStorage","setItem","JSON","stringify","USERS","ACTIVE","NOTACTIVE","ALPHABET","MONTH_LIST","1","2","3","4","5","6","7","8","9","10","11","12","getMonthIndex","date","Date","getUTCMonth","formatData","data","currentDate","getUTCDate","toLocaleString","month","getUTCFullYear","getIndexMonthStartingFromCurent","monthIndex","currentMonth","monthIndexMap","i","getMonthIndexMap","populateUsers","users","populatedUsers","active","map","user","dob","letter","lastName","indexFromCurentMonth","sort","a","b","keyA","keyB","combineReducers","state","action","type","id","index","findIndex","newUsersArray","middlewares","thunkMiddleware","middlewareEnhancer","applyMiddleware","store","createStore","rootReducer","usersRequestSucceeded","fetchAndLoadUsers","dispatch","savedUsers","restoredValue","parse","getItem","axios","get","then","response","catch","error","usersRequestFailed","connect","saveUsers","updateUsers","props","firstName","onValueChange","useCallback","event","target","value","className","checked","onChange","fetchUsers","useEffect","employeeArray","forEach","arrayItem","push","employeeList","Birthdays","useSelector","preparedUsersList","activeUsersList","monthObj","preparedUsers","Object","entries","usersPreparedForRender","usersByMonth","userIndex","keys","usersChunk","createMonthObj","length","sortedUsersByMonth","withRouter","path","component","Employees","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","basename","process","document","getElementById"],"mappings":"4QAAaA,EAAW,SAACC,EAAKC,GAC5BC,aAAaC,QAAQH,EAAKI,KAAKC,UAAUJ,KCD9BK,EAAQ,QACRC,EAAS,SACTC,EAAY,aAEZC,EAAW,CACtB,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KAGWC,EAAa,CACxB,CAAEC,EAAG,WACL,CAAEC,EAAG,YACL,CAAEC,EAAG,SACL,CAAEC,EAAG,SACL,CAAEC,EAAG,OACL,CAAEC,EAAG,QACL,CAAEC,EAAG,QACL,CAAEC,EAAG,UACL,CAAEC,EAAG,aACL,CAAEC,GAAI,WACN,CAAEC,GAAI,YACN,CAAEC,GAAI,aC3CKC,EAAgB,SAACC,GAC5B,OAAIA,EACK,IAAIC,KAAKD,GAAME,cAAgB,GAEjC,IAAID,MAAOC,cAAgB,GAGvBC,EAAa,SAACC,GACzB,IAAMC,EAAc,IAAIJ,KAAKG,GAC7B,MAAM,GAAN,OAAUC,EAAYC,aAAtB,YAAsCD,EAAYE,eAAe,UAAW,CAC1EC,MAAO,SADT,aAEOH,EAAYI,iBAFnB,UAkBWC,EAAkC,SAACC,GAE9C,OAf8B,WAG9B,IAFA,IAAMC,EAAeb,IACfc,EAAgB,GACbC,EAAI,EAAGA,EDaU,GCbQA,GAAK,EACjCF,EAAeE,GAAK,GACtBD,EAAcD,EAAeE,GAAKA,EAElCD,EAAcD,EAAeE,EAAI,IAAMA,EAG3C,OAAOD,EAIeE,GACDJ,IC1BjBK,EAAgB,SAACC,GACrB,IAAIC,EAwBJ,OAtBEA,EADED,EAAM,IAAMA,EAAM,GAAGE,OACNF,EAEAA,EAAMG,KAAI,SAACC,GAC1B,IAAMV,EAAaZ,EAAcsB,EAAKC,KAQtC,OAPmB,2BACdD,GADc,IAEjBF,OAAQnC,EACRuC,OAAQF,EAAKG,UAAYH,EAAKG,SAAS,GACvChB,MAAOG,EACPc,qBAAsBf,EAAgCC,SAK7Ce,MAAK,SAAUC,EAAGC,GAC/B,IAAMC,EAAOF,EAAEH,SACTM,EAAOF,EAAEJ,SACf,OAAIK,EAAOC,GAAc,EACrBD,EAAOC,EAAa,EACjB,KAGFZ,GAkCMa,kBAAgB,CAC7Bd,MAhCF,WAA2C,IAArBe,EAAoB,uDAAZ,GAAIC,EAAQ,uCACxC,OAAQA,EAAOC,MACb,IAAK,0BAA4B,IACvBjB,EAAUgB,EAAVhB,MACFC,EAAiBF,EAAcC,GAIrC,OAFA1C,EAASO,EAAOoC,GAET,2BACFc,GADL,IAEEf,MAAOC,IAGX,IAAK,eAAiB,IACZiB,EAAeF,EAAfE,GAAIhB,EAAWc,EAAXd,OACNiB,EAAQJ,EAAMf,MAAMoB,WAAU,SAAChB,GAAD,OAAUA,EAAKc,KAAOA,KACpDG,EAAa,YAAON,EAAMf,OAKhC,OAJAqB,EAAcF,GAAOjB,OAASA,EAE9B5C,EAASO,EAAOwD,GAET,2BACFN,GADL,IAEEf,MAAOqB,IAGX,QACE,OAAON,MCpDPO,EAAc,CAACC,KACfC,EAAqBC,IAAe,WAAf,EAAmBH,GAI/BI,EAFDC,YAAYC,EAPL,CACnB5B,MAAO,IAM4CwB,G,gCCPxCK,EAAwB,SAAC7B,GAEpC,MADkB,CAAEiB,KAAM,0BAA2BjB,UAc1C8B,EAAoB,kBAAM,SAACC,GACtC,IAAMC,ELhBe,SAACzE,GACtB,IAAI0E,EAAgBtE,KAAKuE,MAAMzE,aAAa0E,QAAQ5E,IAMpD,MALsB,UAAlB0E,EACFA,GAAgB,EACW,SAAlBA,IACTA,GAAgB,GAEXA,EKSYE,CAAQtE,GACvBmE,EACFD,EAASF,EAAsBG,IAE/BI,IACGC,IJtBS,kEIuBTC,MAAK,SAACC,GAAD,OAAcR,EAASF,EAAsBU,EAASpD,UAC3DqD,OAAM,SAACC,GAAD,OAAWV,EAlBU,SAACU,GAEjC,MADkB,CAAExB,KAAM,uBAAwBwB,SAiBnBC,CAAmBD,S,OC+BrCE,cAAQ,MApDI,SAACZ,GAI1B,MAHoB,CAClBa,UAAW,SAAC1B,EAAIhB,GAAL,OAAgB6B,EDMJ,SAACb,EAAIhB,GAE9B,MADkB,CAAEe,KAAM,eAAgBC,KAAIhB,UCPR2C,CAAY3B,EAAIhB,QAkDzCyC,EA7CE,SAACG,GAAW,IACnB5B,EAAoC4B,EAApC5B,GAAIX,EAAgCuC,EAAhCvC,SAAUwC,EAAsBD,EAAtBC,UAAW7C,EAAW4C,EAAX5C,OAC3B8C,EAAgBC,uBAAY,SAACC,GACjCJ,EAAMF,UAAU1B,EAAIgC,EAAMC,OAAOC,UAEnC,OACE,qBAAIC,UAAU,sBAAd,UACG,IACD,uBAAMA,UAAS,UAAKnD,IAAWpC,EAAS,SAAW,IAAnD,UACGyC,EADH,IACcwC,KAEd,sBAAKM,UAAU,uBAAf,UACE,wBAAOA,UAAU,iBAAjB,UACE,uBACEpC,KAAK,QACLmC,MAAOrF,EACPuF,QAASpD,IAAWnC,EACpBwF,SAAUP,EACVK,UAAU,gBAEXtF,KAEH,kCACE,uBACEkD,KAAK,QACLmC,MAAOtF,EACPwF,QAASpD,IAAWpC,EACpByF,SAAUP,EACVK,UAAU,gBAEXvF,cC9BX,IAiEe6E,eAvEf,SAAyB5B,GACvB,MAAO,CACLf,MAAOe,EAAMf,OAASe,EAAMf,MAAMA,UAIX,SAAC+B,GAI1B,MAHoB,CAClByB,WAAY,kBAAMzB,EAASD,SA+DhBa,EA1DG,SAACG,GACjBW,qBAAU,WACRX,EAAMU,eACL,IA2CH,OACE,8BACE,oBAAIH,UAAU,wBAAd,SAAuCP,EAAM9C,OA3C5B,WACnB,IAAM0D,EAAgB,GAsCtB,OArCIZ,EAAM9C,OACRhC,EAAS2F,SAAQ,SAACrD,GAChB,IAAMsD,EAAY,GAElBA,EAAUC,KACR,oBAAIR,UAAU,OAAd,SACG/C,GADuBA,IAK5B,IAAMa,EAAQ2B,EAAM9C,MAAMoB,WAAU,SAAChB,GAAD,OAAUA,EAAKE,SAAWA,KAC9D,IAAe,IAAXa,EAEF,IADA,IAAItB,EAAIsB,EACD2B,EAAM9C,MAAMH,IAAMiD,EAAM9C,MAAMH,GAAGS,SAAWA,GACjDsD,EAAUC,KACR,cAAC,EAAD,CAEEtD,SAAUuC,EAAM9C,MAAMH,GAAGU,SACzBwC,UAAWD,EAAM9C,MAAMH,GAAGkD,UAC1B7C,OAAQ4C,EAAM9C,MAAMH,GAAGK,OACvBgB,GAAI4B,EAAM9C,MAAMH,GAAGqB,IAJd4B,EAAM9C,MAAMH,GAAGqB,KAOxBrB,GAAK,OAGP+D,EAAUC,KACR,qBAAIR,UAAU,OAAd,UACG,IADH,OAEO,MAFP,0BAA6C/C,KAOjD,OADAoD,EAAcG,KAAK,oBAAIR,UAAU,gBAAd,SAA+BO,KAC3CF,KAGJA,EAIiDI,U,QC0B7CC,EAnBG,WAChB,IAAM/D,EAAQgE,aAAY,SAACjD,GAAD,OAAWA,EAAMf,MAAMA,SAE7CiE,EAAoB,GACpBC,EAAkB,GAClBlE,IAGFiE,EA5B2B,SAACE,GAC9B,IAAMC,EAAgB,GAgBtB,OAdAC,OAAOC,QAAQH,GAAUR,SAAQ,YAAmB,IAAD,mBAAhBpG,EAAgB,KAAX6F,EAAW,KACjDgB,EAAcP,KACZ,oBAAIR,UAAU,kBAAd,SACGpF,EAAWmF,EAAM,GAAG7D,MAAQ,GAAG6D,EAAM,GAAG7D,QAD3C,UAAwChC,GAAxC,OAA8C6F,EAAM,GAAGlC,MAIzDkC,EAAMO,SAAQ,SAACvD,GACbgE,EAAcP,KACZ,qBAAIR,UAAU,OAAd,UACGjD,EAAKG,SADR,IACmBH,EAAK2C,UADxB,MACsC7D,EAAWkB,EAAKC,OAD5BD,EAAKc,WAM9BkD,EAWeG,CA3DD,SAACL,GACtB,IAAMM,EAAe,GA2BrB,OA1BAvG,EAAW0F,SAAQ,SAACQ,EAAUhD,GAC5B,IAAMsD,EAAYP,EAAgB9C,WAChC,SAAChB,GAAD,OAAUA,EAAKb,SAAW8E,OAAOK,KAAKzG,EAAWkD,IAAQ,MAG3D,IAAmB,IAAfsD,EAAkB,CAIpB,IAHA,IAAME,EAAa,GACf9E,EAAI4E,EAEDP,EAAgBrE,IAAMqE,EAAgBrE,GAAGN,QAAU4B,EAAQ,GAChEwD,EAAWd,KAAKK,EAAgBrE,IAChCA,GAAK,EAGP8E,EAAWlE,MAAK,SAAUC,EAAGC,GAC3B,IAAMC,EAAOF,EAAEH,SACTM,EAAOF,EAAEJ,SACf,OAAIK,EAAOC,GAAc,EACrBD,EAAOC,EAAa,EACjB,KAET2D,EAAaG,EAAW,GAAGnE,sBAAwBmE,MAGvDN,OAAOC,QAAQE,GAAc/D,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAE,GAAKD,EAAE,MAE9C8D,EA8BYI,CADjBV,EA5EuB,SAAClE,GAC1B,IAAMkE,EAAkB,GAexB,OAdIlE,GAA0B,IAAjBA,EAAM6E,QACjB7E,EAAM2D,SAAQ,SAACvD,GACTA,EAAKF,SAAWpC,GAClBoG,EAAgBL,KAAKzD,MAI3B8D,EAAgBzD,MAAK,SAAUC,EAAGC,GAChC,IAAMC,EAAOF,EAAEF,qBACTK,EAAOF,EAAEH,qBACf,OAAII,EAAOC,GAAc,EACrBD,EAAOC,EAAa,EACjB,KAEFqD,EA4DaY,CAAmB9E,MAIvC,OACE,gCACE,oBAAIqD,UAAU,aAAd,gCACA,oBAAIA,UAAU,mBACZa,EAAgBW,QAAU,0DAC5B,6BAAK7E,GAASiE,Q,MChELc,mBApBf,WACE,OACE,gCACE,sBAAK1B,UAAU,MAAf,UACE,gCACE,oBAAIA,UAAU,aAAd,uBACA,cAAC,IAAD,UACE,cAAC,IAAD,CAAO2B,KAAK,aAAaC,UAAWC,SAGxC,8BACE,oBAAI7B,UAAU,sBAEhB,cAAC,EAAD,OAEF,oBAAIA,UAAU,wBCTL8B,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqB/C,MAAK,YAAkD,IAA/CgD,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCEdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUnE,MAAOA,EAAjB,SACE,cAAC,IAAD,CAAQoE,SAAUC,0BAAlB,SACE,cAAC,EAAD,UAINC,SAASC,eAAe,SAM1Bd,M","file":"static/js/main.73342968.chunk.js","sourcesContent":["export const saveItem = (key, item) => {\n  localStorage.setItem(key, JSON.stringify(item))\n}\n\nexport const getItem = (key) => {\n  let restoredValue = JSON.parse(localStorage.getItem(key))\n  if (restoredValue === 'false') {\n    restoredValue = false\n  } else if (restoredValue === 'true') {\n    restoredValue = true\n  }\n  return restoredValue\n}\n","export const USERS = 'users'\nexport const ACTIVE = 'active'\nexport const NOTACTIVE = 'not active'\nexport const API = `https://yalantis-react-school-api.yalantis.com/api/task0/users`\nexport const ALPHABET = [\n  'A',\n  'B',\n  'C',\n  'D',\n  'E',\n  'F',\n  'G',\n  'H',\n  'I',\n  'J',\n  'K',\n  'L',\n  'M',\n  'N',\n  'O',\n  'P',\n  'Q',\n  'R',\n  'S',\n  'T',\n  'U',\n  'V',\n  'W',\n  'X',\n  'Y',\n  'Z',\n]\nexport const MONTH_AMOUNT = 12\nexport const MONTH_LIST = [\n  { 1: 'January' },\n  { 2: 'February' },\n  { 3: 'March' },\n  { 4: 'April' },\n  { 5: 'May' },\n  { 6: 'June' },\n  { 7: 'July' },\n  { 8: 'August' },\n  { 9: 'September' },\n  { 10: 'October' },\n  { 11: 'November' },\n  { 12: 'December' },\n]\n","import { MONTH_AMOUNT } from '../constants/constans'\n\nexport const getMonthIndex = (date) => {\n  if (date) {\n    return new Date(date).getUTCMonth() + 1\n  }\n  return new Date().getUTCMonth() + 1\n}\n\nexport const formatData = (data) => {\n  const currentDate = new Date(data)\n  return `${currentDate.getUTCDate()} ${currentDate.toLocaleString('default', {\n    month: 'long',\n  })}, ${currentDate.getUTCFullYear()} year`\n}\n\nexport const getMonthIndexMap = () => {\n  const currentMonth = getMonthIndex()\n  const monthIndexMap = {}\n  for (let i = 0; i < MONTH_AMOUNT; i += 1) {\n    if (currentMonth + i <= 12) {\n      monthIndexMap[currentMonth + i] = i\n    } else {\n      monthIndexMap[currentMonth + i - 12] = i\n    }\n  }\n  return monthIndexMap\n}\n\nexport const getIndexMonthStartingFromCurent = (monthIndex) => {\n  const monthIndexMap = getMonthIndexMap()\n  return monthIndexMap[monthIndex]\n}\n","import { combineReducers } from 'redux'\nimport { saveItem } from '../services/localStorageService'\nimport { USERS, NOTACTIVE } from '../constants/constans'\nimport { getMonthIndex, getIndexMonthStartingFromCurent } from '../utils/utils'\n\nconst populateUsers = (users) => {\n  let populatedUsers\n  if (users[0] && users[0].active) {\n    populatedUsers = users\n  } else {\n    populatedUsers = users.map((user) => {\n      const monthIndex = getMonthIndex(user.dob)\n      const populatedUser = {\n        ...user,\n        active: NOTACTIVE,\n        letter: user.lastName && user.lastName[0],\n        month: monthIndex,\n        indexFromCurentMonth: getIndexMonthStartingFromCurent(monthIndex),\n      }\n      return populatedUser\n    })\n  }\n  populatedUsers.sort(function (a, b) {\n    const keyA = a.lastName\n    const keyB = b.lastName\n    if (keyA < keyB) return -1\n    if (keyA > keyB) return 1\n    return 0\n  })\n\n  return populatedUsers\n}\n\nfunction usersReducer(state = {}, action) {\n  switch (action.type) {\n    case 'USERS_REQUEST_SUCCEEDED': {\n      const { users } = action\n      const populatedUsers = populateUsers(users)\n\n      saveItem(USERS, populatedUsers)\n\n      return {\n        ...state,\n        users: populatedUsers,\n      }\n    }\n    case 'UPDATE_USERS': {\n      const { id, active } = action\n      const index = state.users.findIndex((user) => user.id === id)\n      const newUsersArray = [...state.users]\n      newUsersArray[index].active = active\n\n      saveItem(USERS, newUsersArray)\n\n      return {\n        ...state,\n        users: newUsersArray,\n      }\n    }\n    default:\n      return state\n  }\n}\n\nexport default combineReducers({\n  users: usersReducer,\n})\n","import { createStore, applyMiddleware } from 'redux'\nimport thunkMiddleware from 'redux-thunk'\nimport rootReducer from '../reducers/rootReducer'\n\nconst initialState = {\n  users: [],\n}\n\nconst middlewares = [thunkMiddleware]\nconst middlewareEnhancer = applyMiddleware(...middlewares)\n\nconst store = createStore(rootReducer, initialState, middlewareEnhancer)\n\nexport default store\n","import axios from 'axios'\nimport { getItem } from '../services/localStorageService'\nimport { API, USERS } from '../constants/constans'\n\nexport const usersRequestSucceeded = (users) => {\n  const actionObj = { type: 'USERS_REQUEST_SUCCEEDED', users }\n  return actionObj\n}\n\nexport const usersRequestFailed = (error) => {\n  const actionObj = { type: 'USERS_REQUEST_FAILED', error }\n  return actionObj\n}\n\nexport const updateUsers = (id, active) => {\n  const actionObj = { type: 'UPDATE_USERS', id, active }\n  return actionObj\n}\n\nexport const fetchAndLoadUsers = () => (dispatch) => {\n  const savedUsers = getItem(USERS)\n  if (savedUsers) {\n    dispatch(usersRequestSucceeded(savedUsers))\n  } else {\n    axios\n      .get(API)\n      .then((response) => dispatch(usersRequestSucceeded(response.data)))\n      .catch((error) => dispatch(usersRequestFailed(error)))\n  }\n}\n","import React, { useCallback } from 'react'\nimport propTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { NOTACTIVE, ACTIVE } from '../constants/constans'\nimport { updateUsers } from '../actions/actions'\n\nconst mapDispatchToProps = (dispatch) => {\n  const dispatchObj = {\n    saveUsers: (id, active) => dispatch(updateUsers(id, active)),\n  }\n  return dispatchObj\n}\n\nconst Employee = (props) => {\n  const { id, lastName, firstName, active } = props\n  const onValueChange = useCallback((event) => {\n    props.saveUsers(id, event.target.value)\n  })\n  return (\n    <li className=\"text padding-bottom\">\n      {' '}\n      <span className={`${active === ACTIVE ? 'active' : ''}`}>\n        {lastName} {firstName}\n      </span>\n      <div className=\"radio padding-bottom\">\n        <label className=\"padding-bottom\">\n          <input\n            type=\"radio\"\n            value={NOTACTIVE}\n            checked={active === NOTACTIVE}\n            onChange={onValueChange}\n            className=\"radio-label\"\n          />\n          {NOTACTIVE}\n        </label>\n        <label>\n          <input\n            type=\"radio\"\n            value={ACTIVE}\n            checked={active === ACTIVE}\n            onChange={onValueChange}\n            className=\"radio-label\"\n          />\n          {ACTIVE}\n        </label>\n      </div>\n    </li>\n  )\n}\n\nEmployee.propTypes = {\n  lastName: propTypes.string.isRequired,\n  firstName: propTypes.string.isRequired,\n  active: propTypes.string.isRequired,\n  id: propTypes.string.isRequired,\n  saveUsers: propTypes.func.isRequired,\n}\n\nexport default connect(null, mapDispatchToProps)(Employee)\n","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport propTypes from 'prop-types'\nimport Employee from './Employee'\nimport { fetchAndLoadUsers } from '../actions/actions'\nimport { ALPHABET } from '../constants/constans'\n\nfunction mapStateToProps(state) {\n  return {\n    users: state.users && state.users.users,\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  const dispatchObj = {\n    fetchUsers: () => dispatch(fetchAndLoadUsers()),\n  }\n  return dispatchObj\n}\n\nconst Employees = (props) => {\n  useEffect(() => {\n    props.fetchUsers()\n  }, [])\n\n  const employeeList = () => {\n    const employeeArray = []\n    if (props.users) {\n      ALPHABET.forEach((letter) => {\n        const arrayItem = []\n\n        arrayItem.push(\n          <li className=\"text\" key={letter}>\n            {letter}\n          </li>,\n        )\n\n        const index = props.users.findIndex((user) => user.letter === letter)\n        if (index !== -1) {\n          let i = index\n          while (props.users[i] && props.users[i].letter === letter) {\n            arrayItem.push(\n              <Employee\n                key={props.users[i].id}\n                lastName={props.users[i].lastName}\n                firstName={props.users[i].firstName}\n                active={props.users[i].active}\n                id={props.users[i].id}\n              ></Employee>,\n            )\n            i += 1\n          }\n        } else {\n          arrayItem.push(\n            <li className=\"text\" key={`emploeeListEmpty${letter}`}>\n              {' '}\n              ----{' '}\n            </li>,\n          )\n        }\n        employeeArray.push(<ul className=\"employee-item\">{arrayItem}</ul>)\n        return employeeArray\n      })\n    }\n    return employeeArray\n  }\n  return (\n    <div>\n      <ul className=\"employee-list-wrapper\">{props.users && employeeList()}</ul>\n    </div>\n  )\n}\n\nEmployees.propTypes = {\n  fetchUsers: propTypes.func.isRequired,\n  users: propTypes.array,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Employees)\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { ACTIVE, MONTH_LIST } from '../constants/constans'\nimport { formatData } from '../utils/utils'\n\nconst sortedUsersByMonth = (users) => {\n  const activeUsersList = []\n  if (users && users.length !== 0) {\n    users.forEach((user) => {\n      if (user.active === ACTIVE) {\n        activeUsersList.push(user)\n      }\n    })\n  }\n  activeUsersList.sort(function (a, b) {\n    const keyA = a.indexFromCurentMonth\n    const keyB = b.indexFromCurentMonth\n    if (keyA < keyB) return -1\n    if (keyA > keyB) return 1\n    return 0\n  })\n  return activeUsersList\n}\n\nconst createMonthObj = (activeUsersList) => {\n  const usersByMonth = {}\n  MONTH_LIST.forEach((monthObj, index) => {\n    const userIndex = activeUsersList.findIndex(\n      (user) => user.month === +Object.keys(MONTH_LIST[index])[0],\n    )\n\n    if (userIndex !== -1) {\n      const usersChunk = []\n      let i = userIndex\n\n      while (activeUsersList[i] && activeUsersList[i].month === index + 1) {\n        usersChunk.push(activeUsersList[i])\n        i += 1\n      }\n\n      usersChunk.sort(function (a, b) {\n        const keyA = a.lastName\n        const keyB = b.lastName\n        if (keyA < keyB) return -1\n        if (keyA > keyB) return 1\n        return 0\n      })\n      usersByMonth[usersChunk[0].indexFromCurentMonth] = usersChunk\n    }\n  })\n  Object.entries(usersByMonth).sort((a, b) => b[1] - a[1])\n\n  return usersByMonth\n}\n\nconst usersPreparedForRender = (monthObj) => {\n  const preparedUsers = []\n\n  Object.entries(monthObj).forEach(([key, value]) => {\n    preparedUsers.push(\n      <li className=\"month-name text\" key={`${key}${value[0].id}`}>\n        {MONTH_LIST[value[0].month - 1][value[0].month]}\n      </li>,\n    )\n    value.forEach((user) => {\n      preparedUsers.push(\n        <li className=\"text\" key={user.id}>\n          {user.lastName} {user.firstName} - {formatData(user.dob)}\n        </li>,\n      )\n    })\n  })\n  return preparedUsers\n}\n\nconst Birthdays = () => {\n  const users = useSelector((state) => state.users.users)\n\n  let preparedUsersList = []\n  let activeUsersList = []\n  if (users) {\n    activeUsersList = sortedUsersByMonth(users)\n    const monthObj = createMonthObj(activeUsersList)\n    preparedUsersList = usersPreparedForRender(monthObj)\n  }\n  return (\n    <div>\n      <h3 className=\"app-header\">Employees birthday</h3>\n      <hr className=\"vertical-line\"></hr>\n      {!activeUsersList.length && <div>Employees List is empty</div>}\n      <ul>{users && preparedUsersList}</ul>\n    </div>\n  )\n}\nexport default Birthdays\n","import React from 'react'\nimport { Route, Switch, withRouter } from 'react-router-dom'\nimport Employees from './components/Employees'\nimport Birthdays from './components/Birthdays'\nimport './App.css'\n\nfunction App() {\n  return (\n    <div>\n      <div className=\"App\">\n        <div>\n          <h3 className=\"app-header\">Employees</h3>\n          <Switch>\n            <Route path=\"/employees\" component={Employees}></Route>\n          </Switch>\n        </div>\n        <div>\n          <hr className=\"horizontal-line\"></hr>\n        </div>\n        <Birthdays></Birthdays>\n      </div>\n      <hr className=\"vertical-line\"></hr>\n    </div>\n  )\n}\n\nexport default withRouter(App)\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport { Provider } from 'react-redux'\nimport store from './stores/store'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router basename={process.env.PUBLIC_URL}>\n        <App />\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}