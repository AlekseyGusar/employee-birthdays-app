{"version":3,"sources":["services/localStorageService.js","constants/constans.js","utils/utils.js","reducers/rootReducer.js","stores/store.js","actions/actions.js","components/Employee.js","components/Employees.js","components/Birthdays.js","App.js","reportWebVitals.js","index.js"],"names":["saveItem","key","item","localStorage","setItem","JSON","stringify","USERS","ACTIVE","NOTACTIVE","ALPHABET","MONTH_LIST","1","2","3","4","5","6","7","8","9","10","11","12","getMonthIndex","date","Date","getUTCMonth","formatData","data","currentDate","getUTCDate","toLocaleString","month","getUTCFullYear","getIndexMonthStartingFromCurent","monthIndex","currentMonth","monthIndexMap","i","getMonthIndexMap","populateUsers","users","populatedUsers","active","map","user","dob","letter","lastName","indexFromCurentMonth","sort","a","b","keyA","keyB","combineReducers","state","action","type","id","index","findIndex","newUsersArray","middlewares","thunkMiddleware","middlewareEnhancer","applyMiddleware","store","createStore","rootReducer","usersRequestSucceeded","fetchAndLoadUsers","dispatch","savedUsers","restoredValue","parse","getItem","axios","get","then","response","catch","error","usersRequestFailed","connect","saveUsers","updateUsers","props","firstName","onValueChange","useCallback","event","target","value","className","checked","onChange","fetchUsers","useEffect","employeeArray","forEach","arrayItem","push","employeeList","Birthdays","useSelector","preparedUsersList","activeUsersList","monthObj","preparedUsers","Object","entries","usersPreparedForRender","usersByMonth","userIndex","keys","usersChunk","createMonthObj","length","sortedUsersByMonth","withRouter","path","component","Employees","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.13e0a07f.chunk.js","sourcesContent":["export const saveItem = (key, item) => {\r\n  localStorage.setItem(key, JSON.stringify(item))\r\n}\r\n\r\nexport const getItem = (key) => {\r\n  let restoredValue = JSON.parse(localStorage.getItem(key))\r\n  if (restoredValue === 'false') {\r\n    restoredValue = false\r\n  } else if (restoredValue === 'true') {\r\n    restoredValue = true\r\n  }\r\n  return restoredValue\r\n}\r\n","export const USERS = 'users'\r\nexport const ACTIVE = 'active'\r\nexport const NOTACTIVE = 'not active'\r\nexport const API = `https://yalantis-react-school-api.yalantis.com/api/task0/users`\r\nexport const ALPHABET = [\r\n  'A',\r\n  'B',\r\n  'C',\r\n  'D',\r\n  'E',\r\n  'F',\r\n  'G',\r\n  'H',\r\n  'I',\r\n  'J',\r\n  'K',\r\n  'L',\r\n  'M',\r\n  'N',\r\n  'O',\r\n  'P',\r\n  'Q',\r\n  'R',\r\n  'S',\r\n  'T',\r\n  'U',\r\n  'V',\r\n  'W',\r\n  'X',\r\n  'Y',\r\n  'Z',\r\n]\r\nexport const MONTH_AMOUNT = 12\r\nexport const MONTH_LIST = [\r\n  { 1: 'January' },\r\n  { 2: 'February' },\r\n  { 3: 'March' },\r\n  { 4: 'April' },\r\n  { 5: 'May' },\r\n  { 6: 'June' },\r\n  { 7: 'July' },\r\n  { 8: 'August' },\r\n  { 9: 'September' },\r\n  { 10: 'October' },\r\n  { 11: 'November' },\r\n  { 12: 'December' },\r\n]\r\n","import { MONTH_AMOUNT } from '../constants/constans'\r\n\r\nexport const getMonthIndex = (date) => {\r\n  if (date) {\r\n    return new Date(date).getUTCMonth() + 1\r\n  }\r\n  return new Date().getUTCMonth() + 1\r\n}\r\n\r\nexport const formatData = (data) => {\r\n  const currentDate = new Date(data)\r\n  return `${currentDate.getUTCDate()} ${currentDate.toLocaleString('default', {\r\n    month: 'long',\r\n  })}, ${currentDate.getUTCFullYear()} year`\r\n}\r\n\r\nexport const getMonthIndexMap = () => {\r\n  const currentMonth = getMonthIndex()\r\n  const monthIndexMap = {}\r\n  for (let i = 0; i < MONTH_AMOUNT; i += 1) {\r\n    if (currentMonth + i <= 12) {\r\n      monthIndexMap[currentMonth + i] = i\r\n    } else {\r\n      monthIndexMap[currentMonth + i - 12] = i\r\n    }\r\n  }\r\n  return monthIndexMap\r\n}\r\n\r\nexport const getIndexMonthStartingFromCurent = (monthIndex) => {\r\n  const monthIndexMap = getMonthIndexMap()\r\n  return monthIndexMap[monthIndex]\r\n}\r\n","import { combineReducers } from 'redux'\r\nimport { saveItem } from '../services/localStorageService'\r\nimport { USERS, NOTACTIVE } from '../constants/constans'\r\nimport { getMonthIndex, getIndexMonthStartingFromCurent } from '../utils/utils'\r\n\r\nconst populateUsers = (users) => {\r\n  let populatedUsers\r\n  if (users[0] && users[0].active) {\r\n    populatedUsers = users\r\n  } else {\r\n    populatedUsers = users.map((user) => {\r\n      const monthIndex = getMonthIndex(user.dob)\r\n      const populatedUser = {\r\n        ...user,\r\n        active: NOTACTIVE,\r\n        letter: user.lastName && user.lastName[0],\r\n        month: monthIndex,\r\n        indexFromCurentMonth: getIndexMonthStartingFromCurent(monthIndex),\r\n      }\r\n      return populatedUser\r\n    })\r\n  }\r\n  populatedUsers.sort(function (a, b) {\r\n    const keyA = a.lastName\r\n    const keyB = b.lastName\r\n    if (keyA < keyB) return -1\r\n    if (keyA > keyB) return 1\r\n    return 0\r\n  })\r\n\r\n  return populatedUsers\r\n}\r\n\r\nfunction usersReducer(state = {}, action) {\r\n  switch (action.type) {\r\n    case 'USERS_REQUEST_SUCCEEDED': {\r\n      const { users } = action\r\n      const populatedUsers = populateUsers(users)\r\n\r\n      saveItem(USERS, populatedUsers)\r\n\r\n      return {\r\n        ...state,\r\n        users: populatedUsers,\r\n      }\r\n    }\r\n    case 'UPDATE_USERS': {\r\n      const { id, active } = action\r\n      const index = state.users.findIndex((user) => user.id === id)\r\n      const newUsersArray = [...state.users]\r\n      newUsersArray[index].active = active\r\n\r\n      saveItem(USERS, newUsersArray)\r\n\r\n      return {\r\n        ...state,\r\n        users: newUsersArray,\r\n      }\r\n    }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default combineReducers({\r\n  users: usersReducer,\r\n})\r\n","import { createStore, applyMiddleware } from 'redux'\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport rootReducer from '../reducers/rootReducer'\r\n\r\nconst initialState = {\r\n  users: [],\r\n}\r\n\r\nconst middlewares = [thunkMiddleware]\r\nconst middlewareEnhancer = applyMiddleware(...middlewares)\r\n\r\nconst store = createStore(rootReducer, initialState, middlewareEnhancer)\r\n\r\nexport default store\r\n","import axios from 'axios'\r\nimport { getItem } from '../services/localStorageService'\r\nimport { API, USERS } from '../constants/constans'\r\n\r\nexport const usersRequestSucceeded = (users) => {\r\n  const actionObj = { type: 'USERS_REQUEST_SUCCEEDED', users }\r\n  return actionObj\r\n}\r\n\r\nexport const usersRequestFailed = (error) => {\r\n  const actionObj = { type: 'USERS_REQUEST_FAILED', error }\r\n  return actionObj\r\n}\r\n\r\nexport const updateUsers = (id, active) => {\r\n  const actionObj = { type: 'UPDATE_USERS', id, active }\r\n  return actionObj\r\n}\r\n\r\nexport const fetchAndLoadUsers = () => (dispatch) => {\r\n  const savedUsers = getItem(USERS)\r\n  if (savedUsers) {\r\n    dispatch(usersRequestSucceeded(savedUsers))\r\n  } else {\r\n    axios\r\n      .get(API)\r\n      .then((response) => dispatch(usersRequestSucceeded(response.data)))\r\n      .catch((error) => dispatch(usersRequestFailed(error)))\r\n  }\r\n}\r\n","import React, { useCallback } from 'react'\r\nimport propTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { NOTACTIVE, ACTIVE } from '../constants/constans'\r\nimport { updateUsers } from '../actions/actions'\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  const dispatchObj = {\r\n    saveUsers: (id, active) => dispatch(updateUsers(id, active)),\r\n  }\r\n  return dispatchObj\r\n}\r\n\r\nconst Employee = (props) => {\r\n  const { id, lastName, firstName, active } = props\r\n  const onValueChange = useCallback((event) => {\r\n    props.saveUsers(id, event.target.value)\r\n  })\r\n  return (\r\n    <li className=\"text padding-bottom\">\r\n      {' '}\r\n      <span className={`${active === ACTIVE ? 'active' : ''}`}>\r\n        {lastName} {firstName}\r\n      </span>\r\n      <div className=\"radio padding-bottom\">\r\n        <label className=\"padding-bottom\">\r\n          <input\r\n            type=\"radio\"\r\n            value={NOTACTIVE}\r\n            checked={active === NOTACTIVE}\r\n            onChange={onValueChange}\r\n            className=\"radio-label\"\r\n          />\r\n          {NOTACTIVE}\r\n        </label>\r\n        <label>\r\n          <input\r\n            type=\"radio\"\r\n            value={ACTIVE}\r\n            checked={active === ACTIVE}\r\n            onChange={onValueChange}\r\n            className=\"radio-label\"\r\n          />\r\n          {ACTIVE}\r\n        </label>\r\n      </div>\r\n    </li>\r\n  )\r\n}\r\n\r\nEmployee.propTypes = {\r\n  lastName: propTypes.string.isRequired,\r\n  firstName: propTypes.string.isRequired,\r\n  active: propTypes.string.isRequired,\r\n  id: propTypes.string.isRequired,\r\n  saveUsers: propTypes.func.isRequired,\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Employee)\r\n","import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport propTypes from 'prop-types'\r\nimport Employee from './Employee'\r\nimport { fetchAndLoadUsers } from '../actions/actions'\r\nimport { ALPHABET } from '../constants/constans'\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    users: state.users && state.users.users,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  const dispatchObj = {\r\n    fetchUsers: () => dispatch(fetchAndLoadUsers()),\r\n  }\r\n  return dispatchObj\r\n}\r\n\r\nconst Employees = (props) => {\r\n  useEffect(() => {\r\n    props.fetchUsers()\r\n  }, [])\r\n\r\n  const employeeList = () => {\r\n    const employeeArray = []\r\n    if (props.users) {\r\n      ALPHABET.forEach((letter) => {\r\n        const arrayItem = []\r\n\r\n        arrayItem.push(\r\n          <li className=\"text\" key={letter}>\r\n            {letter}\r\n          </li>,\r\n        )\r\n\r\n        const index = props.users.findIndex((user) => user.letter === letter)\r\n        if (index !== -1) {\r\n          let i = index\r\n          while (props.users[i] && props.users[i].letter === letter) {\r\n            arrayItem.push(\r\n              <Employee\r\n                key={props.users[i].id}\r\n                lastName={props.users[i].lastName}\r\n                firstName={props.users[i].firstName}\r\n                active={props.users[i].active}\r\n                id={props.users[i].id}\r\n              ></Employee>,\r\n            )\r\n            i += 1\r\n          }\r\n        } else {\r\n          arrayItem.push(\r\n            <li className=\"text\" key={`emploeeListEmpty${letter}`}>\r\n              {' '}\r\n              ----{' '}\r\n            </li>,\r\n          )\r\n        }\r\n        employeeArray.push(<ul className=\"employee-item\">{arrayItem}</ul>)\r\n        return employeeArray\r\n      })\r\n    }\r\n    return employeeArray\r\n  }\r\n  return (\r\n    <div>\r\n      <ul className=\"employee-list-wrapper\">{props.users && employeeList()}</ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nEmployees.propTypes = {\r\n  fetchUsers: propTypes.func.isRequired,\r\n  users: propTypes.array,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Employees)\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { ACTIVE, MONTH_LIST } from '../constants/constans'\r\nimport { formatData } from '../utils/utils'\r\n\r\nconst sortedUsersByMonth = (users) => {\r\n  const activeUsersList = []\r\n  if (users && users.length !== 0) {\r\n    users.forEach((user) => {\r\n      if (user.active === ACTIVE) {\r\n        activeUsersList.push(user)\r\n      }\r\n    })\r\n  }\r\n  activeUsersList.sort(function (a, b) {\r\n    const keyA = a.indexFromCurentMonth\r\n    const keyB = b.indexFromCurentMonth\r\n    if (keyA < keyB) return -1\r\n    if (keyA > keyB) return 1\r\n    return 0\r\n  })\r\n  return activeUsersList\r\n}\r\n\r\nconst createMonthObj = (activeUsersList) => {\r\n  const usersByMonth = {}\r\n  MONTH_LIST.forEach((monthObj, index) => {\r\n    const userIndex = activeUsersList.findIndex(\r\n      (user) => user.month === +Object.keys(MONTH_LIST[index])[0],\r\n    )\r\n\r\n    if (userIndex !== -1) {\r\n      const usersChunk = []\r\n      let i = userIndex\r\n\r\n      while (activeUsersList[i] && activeUsersList[i].month === index + 1) {\r\n        usersChunk.push(activeUsersList[i])\r\n        i += 1\r\n      }\r\n\r\n      usersChunk.sort(function (a, b) {\r\n        const keyA = a.lastName\r\n        const keyB = b.lastName\r\n        if (keyA < keyB) return -1\r\n        if (keyA > keyB) return 1\r\n        return 0\r\n      })\r\n      usersByMonth[usersChunk[0].indexFromCurentMonth] = usersChunk\r\n    }\r\n  })\r\n  Object.entries(usersByMonth).sort((a, b) => b[1] - a[1])\r\n\r\n  return usersByMonth\r\n}\r\n\r\nconst usersPreparedForRender = (monthObj) => {\r\n  const preparedUsers = []\r\n\r\n  Object.entries(monthObj).forEach(([key, value]) => {\r\n    preparedUsers.push(\r\n      <li className=\"month-name text\" key={`${key}${value[0].id}`}>\r\n        {MONTH_LIST[value[0].month - 1][value[0].month]}\r\n      </li>,\r\n    )\r\n    value.forEach((user) => {\r\n      preparedUsers.push(\r\n        <li className=\"text\" key={user.id}>\r\n          {user.lastName} {user.firstName} - {formatData(user.dob)}\r\n        </li>,\r\n      )\r\n    })\r\n  })\r\n  return preparedUsers\r\n}\r\n\r\nconst Birthdays = () => {\r\n  const users = useSelector((state) => state.users.users)\r\n\r\n  let preparedUsersList = []\r\n  let activeUsersList = []\r\n  if (users) {\r\n    activeUsersList = sortedUsersByMonth(users)\r\n    const monthObj = createMonthObj(activeUsersList)\r\n    preparedUsersList = usersPreparedForRender(monthObj)\r\n  }\r\n  return (\r\n    <div>\r\n      <h3 className=\"app-header\">Employees birthday</h3>\r\n      <hr className=\"vertical-line\"></hr>\r\n      {!activeUsersList.length && <div>Employees List is empty</div>}\r\n      <ul>{users && preparedUsersList}</ul>\r\n    </div>\r\n  )\r\n}\r\nexport default Birthdays\r\n","import React from 'react'\r\nimport { Route, Switch, withRouter } from 'react-router-dom'\r\nimport Employees from './components/Employees'\r\nimport Birthdays from './components/Birthdays'\r\nimport './App.css'\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <div className=\"App\">\r\n        <div>\r\n          <h3 className=\"app-header\">Employees</h3>\r\n          <Switch>\r\n            <Route path=\"/employees\" component={Employees}></Route>\r\n          </Switch>\r\n        </div>\r\n        <div>\r\n          <hr className=\"horizontal-line\"></hr>\r\n        </div>\r\n        <Birthdays></Birthdays>\r\n      </div>\r\n      <hr className=\"vertical-line\"></hr>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default withRouter(App)\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry)\r\n      getFID(onPerfEntry)\r\n      getFCP(onPerfEntry)\r\n      getLCP(onPerfEntry)\r\n      getTTFB(onPerfEntry)\r\n    })\r\n  }\r\n}\r\n\r\nexport default reportWebVitals\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { BrowserRouter as Router } from 'react-router-dom'\r\nimport { Provider } from 'react-redux'\r\nimport store from './stores/store'\r\nimport './index.css'\r\nimport App from './App'\r\nimport reportWebVitals from './reportWebVitals'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <Router>\r\n        <App />\r\n      </Router>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n)\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals()\r\n"],"sourceRoot":""}